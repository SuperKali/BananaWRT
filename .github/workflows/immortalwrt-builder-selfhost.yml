#
# https://github.com/P3TERX/Actions-OpenWrt
#
# File: .github/workflows/immortalwrt-builder-selfhost.yml
# Description: Build ImmortalWRT (Self Hosted) using GitHub Actions
#
# Copyright (c) 2019-2024 P3TERX <https://p3terx.com>
# Copyright (c) 2024-2025 SuperKali <hello@superkali.me>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.



name: BananaWRT Builder (Self Hosted)

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Select the release type'
        required: true
        type: choice
        options:
          - stable
          - nightly
        default: stable
      architecture:
        description: 'Select the host architecture'
        required: true
        type: choice
        options:
          - x64
          - arm64
        default: x64
      version_system:
        description: 'Version to build (e.g., 24.10.0)'
        type: string
        required: false
        default: '24.10.0'

env:
  FEEDS_CONF: feeds.conf.default
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_PACKAGE_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Europe/Rome

jobs:
  build:
    strategy:
      matrix:
        target: [immortalwrt, openwrt]
    runs-on: [self-hosted, "${{ github.event.inputs.architecture }}"]

    env:
      REPO_URL: ${{ matrix.target == 'immortalwrt' && 'https://github.com/immortalwrt/immortalwrt' || 'https://github.com/openwrt/openwrt' }}
      REPO_BRANCH: ${{ format('v{0}', github.event.inputs.version_system || '24.10.0') }}
      VERSION_DOWNLOAD: ${{ github.event.inputs.version_system || '24.10.0' }}
      CONFIG_FILE: config/${{ github.event.inputs.release_type }}/.config
      BUILD_DIR: ${{ runner.workspace }}/${{ matrix.target }}

    steps:
    - name: Checkout Source Code
      uses: actions/checkout@v4

    - name: Set Up Build Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        /bin/bash .github/scripts/setup-env.sh setup

    - name: Set timezone on the host
      run: sudo timedatectl set-timezone "$TZ" || echo "Failed to set timezone, proceeding anyway."

    - name: Authenticate GitHub
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        echo "machine github.com login ${{ secrets.PERSONAL_ACCESS_TOKEN }}" > ~/.netrc
        chmod 600 ~/.netrc

    - name: Clone Repository
      working-directory: ${{ runner.workspace }}
      run: |
        git clone "$REPO_URL" -b "$REPO_BRANCH" "${{ matrix.target }}"

    - name: Apply Custom Feeds Configuration
      run: |
        [ -e ${{ env.FEEDS_CONF }} ] && mv ${{ env.FEEDS_CONF }} "$BUILD_DIR/feeds.conf.default"
        chmod +x ${{ env.DIY_P1_SH }}
        cd "$BUILD_DIR"
        "$GITHUB_WORKSPACE/${{ env.DIY_P1_SH }}"

    - name: Add Custom DTS Files
      run: |
        cp -r dts/${{ github.event.inputs.release_type }}/* "$BUILD_DIR/target/linux/mediatek/dts/"

    - name: Update and Install Package Feeds
      working-directory: ${{ env.BUILD_DIR }}
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Apply Custom Configuration
      run: |
        [ -e files ] && mv files "$BUILD_DIR/files"
        [ -e ${{ env.CONFIG_FILE }} ] && mv ${{ env.CONFIG_FILE }} "$BUILD_DIR/.config"
        chmod +x ${{ env.DIY_P2_SH }}
        cd "$BUILD_DIR"
        "$GITHUB_WORKSPACE/${{ env.DIY_P2_SH }}"
        ./scripts/feeds install -p additional_pack -a

    - name: Diffconfig with current configuration
      working-directory: ${{ env.BUILD_DIR }}
      run: |
        ./scripts/diffconfig.sh > diffconfig
        CONFIG_URL=$([ "${{ matrix.target }}" = "immortalwrt" ] && 
          echo "https://downloads.immortalwrt.org/releases/$VERSION_DOWNLOAD/targets/mediatek/filogic/config.buildinfo" ||
          echo "https://downloads.openwrt.org/releases/$REPO_BRANCH/targets/mediatek/filogic/config.buildinfo")
        curl -L "$CONFIG_URL" -o config.buildinfo
        cat diffconfig >> config.buildinfo
        mv config.buildinfo .config
        
        REPO_BASE_URL=$([ "${{ matrix.target }}" = "immortalwrt" ] &&
          echo "https://downloads.immortalwrt.org/releases/$VERSION_DOWNLOAD" ||
          echo "https://downloads.openwrt.org/releases/$REPO_BRANCH")
        sed -i "s|^CONFIG_VERSION_REPO=.*|CONFIG_VERSION_REPO=\"$REPO_BASE_URL\"|g" .config

    - name: Download Required Packages
      working-directory: ${{ env.BUILD_DIR }}
      run: |
        make defconfig
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Build Firmware
      working-directory: ${{ env.BUILD_DIR }}
      run: |
        make -j$(nproc) || make -j1 V=s
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        echo "FILE_DATE=$(date +'%Y%m%d%H%M')" >> $GITHUB_ENV

    - name: Check Disk Usage
      run: df -hT

    - name: Upload Binary Files
      if: env.UPLOAD_BIN_DIR == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.target }}_bin_${{ env.FILE_DATE }}
        path: ${{ env.BUILD_DIR }}/bin

    - name: Prepare Firmware for Upload
      run: |
        cd ${{ env.BUILD_DIR }}/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV

    - name: Publish Firmware Release
      if: env.UPLOAD_RELEASE == 'true'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.FILE_DATE }}_${{ matrix.target }}
        body: "Build ${{ matrix.target }} - ${{ github.event.inputs.release_type }} (${{ env.VERSION_DOWNLOAD }})"
        files: ${{ env.FIRMWARE }}/*

    - name: Cleanup Workspace
      if: always()
      run: |
        sudo rm -rf ~/.netrc
        sudo rm -rf "$BUILD_DIR"