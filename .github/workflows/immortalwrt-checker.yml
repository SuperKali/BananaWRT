name: Bump ImmortalWRT Version

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  check-and-bump:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y jq

    - name: Get the latest ImmortalWRT version
      id: get_latest_version
      run: |
        latest_version=$(curl -s https://api.github.com/repos/immortalwrt/immortalwrt/tags | jq -r '.[0].name' | sed 's/^v//')
        if [ -z "$latest_version" ]; then
          echo "Error: Failed to fetch the latest version." >&2
          exit 1
        fi
        echo "latest_version=$latest_version" >> $GITHUB_ENV
        echo "Latest version: $latest_version"

    - name: Check files for REPO_BRANCH updates
      id: check_files
      run: |
        if [ -z "${{ env.latest_version }}" ]; then
          echo "Error: latest_version is not set." >&2
          exit 1
        fi
        files_to_update=()
        for file in .github/workflows/immortalwrt-builder*.yml; do
          if [ -f "$file" ]; then
            file_version=$(grep -m 1 'REPO_BRANCH:' "$file" | awk -F': ' '{if (NF > 1) {gsub(/^ +| +$/, "", $2); print $2}}')
            if [ "$file_version" != "${{ env.latest_version }}" ]; then
              echo "File $file needs update: $file_version -> ${{ env.latest_version }}"
              files_to_update+=("$file")
            else
              echo "File $file is up-to-date."
            fi
          else
            echo "Warning: File $file does not exist."
          fi
        done

        if [ ${#files_to_update[@]} -eq 0 ]; then
          echo "All files are up-to-date."
          echo "needs_update=false" >> $GITHUB_ENV
        else
          echo "Files to update: ${files_to_update[@]}"
          echo "needs_update=true" >> $GITHUB_ENV
          echo "files_to_update=${files_to_update[@]}" >> $GITHUB_ENV
        fi

    - name: Update files with new REPO_BRANCH
      if: env.needs_update == 'true'
      run: |
        IFS=' ' read -r -a files <<< "${{ env.files_to_update }}"
        for file in "${files[@]}"; do
          sed -i "s/REPO_BRANCH: .*/REPO_BRANCH: ${{ env.latest_version }}/" "$file"
          echo "Updated REPO_BRANCH in $file to ${{ env.latest_version }}."
        done

    - name: Format files to update
      if: env.needs_update == 'true'
      run: |
        IFS=' ' read -r -a files <<< "${{ env.files_to_update }}"
        formatted_files=""
        for file in "${files[@]}"; do
        formatted_files+="- $(basename "$file")\n"
        done
        formatted_files=${formatted_files%\\n}
        printf "files_formatted=%s\n" "$formatted_files" >> $GITHUB_ENV
        echo "Formatted files list:"
        echo -e "$formatted_files"

    - name: Create a pull request
      if: env.needs_update == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        branch: bump-immortalwrt-${{ env.latest_version }}
        commit-message: 'Bump ImmortalWRT to version v${{ env.latest_version }}'
        title: 'Bump ImmortalWRT to version v${{ env.latest_version }}'
        body: |
          This pull request updates the following files to the latest ImmortalWRT version (v${{ env.latest_version }}):

          ${{ env.files_formatted }}

          Changes:
          - Updated `REPO_BRANCH:` to `v${{ env.latest_version }}`.
        labels: bump, immortalwrt, v${{ env.latest_version }}
